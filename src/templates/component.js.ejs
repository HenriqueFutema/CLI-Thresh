import createElement from './vdom/createElement';
import render from './vdom/render';
import mount from './vdom/mount';
import diff from './vdom/diff';

//USER
import manageState from './state/manageState'

manageState.createState('count', 0);
manageState.createState('name', 'henrique');

const createVApp = (state) => createElement('div', {
  attrs: {
    id: 'app',
    dataCount: state.count,
  }
});


//DATA TEST
let count = 0

let vApp = createVApp(manageState.getState());
const $app = render(vApp);

const elementAppId = document.getElementById('app')
let $rootEl = mount($app, elementAppId);


setInterval(() => {
  manageState.setState('count', manageState.getState().count + 1) 
  count++;
  generateApp();
}, 3000);

let oldState = manageState.getState()

const generateApp = () => {
  const newState = manageState.getState()
  render(vApp);
  mount($app, elementAppId)
  const vNewApp = createVApp(manageState.getState())
  const patch = oldState && newState !== undefined ? diff(vApp, vNewApp, oldState, newState) : diff(vApp, vNewApp);
  $rootEl = patch($rootEl);
  vApp = vNewApp;
  oldState = newState;
}

generateApp();

export default generateApp